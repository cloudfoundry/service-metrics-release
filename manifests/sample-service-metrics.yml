---
name: sample-service-metrics

releases:
- name: on-demand-service-broker
  version: 0.20.0
- name: service-metrics
  version: latest
- name: routing
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/cf-routing-release?v=0.178.0
  sha1: b07e1e0e2d7bd56b754d065867649f276896f783
  version: "0.178.0"
- name: loggregator-agent
  url: https://bosh.io/d/github.com/cloudfoundry/loggregator-agent-release?v=1.0
  sha: aa70e3bc95e25fe86ab00f3b698216a24a44c9d5
  version: "1.0"
- name: "bpm"
  version: "1.0.4"
  url: "https://bosh.io/d/github.com/cloudfoundry-incubator/bpm-release?v=1.0.4"
  sha1: "41df19697d6a69d2552bc2c132928157fa91abe0"

stemcells:
- alias: xenial
  os: ubuntu-xenial
  version: latest

instance_groups:
- name: broker
  instances: 1
  vm_type: minimal
  stemcell: xenial
  networks: [{name: default}]
  vm_extensions: [access-director]
  azs: [z1]
  jobs:
  - name: bpm
    release: bpm
  - name: odb-service-adapter
    release: service-metrics
  - name: register-broker
    release: on-demand-service-broker
    properties:
      broker_name: ((broker_name))
      broker_uri: https://((broker_uri))
      disable_ssl_cert_verification: ((disable_ssl_cert_verification))
      cf:
        api_url: ((cf.api_url))
        user_credentials:
          username: admin
          password: ((cf.user_credentials.password))
  - name: deregister-broker
    release: on-demand-service-broker
    properties:
      broker_name: ((broker_name))
    jobs: []
  - name: delete-all-service-instances-and-deregister-broker
    release: on-demand-service-broker
    properties:
      broker_name: ((broker_name))
      polling_interval_seconds: 10 # matches broker_client_default_async_poll_interval_seconds in cf manifest
    jobs: []
  - name: delete-all-service-instances
    release: on-demand-service-broker
    properties:
      polling_interval_seconds: 10 # matches broker_client_default_async_poll_interval_seconds in cf manifest
    jobs: []
  - name: upgrade-all-service-instances
    release: on-demand-service-broker
    properties:
      max_in_flight: 3
      polling_interval_seconds: 10
      canaries: 2
    jobs: []
  - name: orphan-deployments
    release: on-demand-service-broker
    properties: {}
    jobs: []
  - name: broker
    release: on-demand-service-broker
    properties:
      disable_ssl_cert_verification: ((disable_ssl_cert_verification))
      expose_operational_errors: false
      startup_banner: true
      port: &broker_port 8080
      username: broker
      password: ((broker_password))
      shutdown_timeout_in_seconds: 10
      bosh:
        url: ((bosh.url))
        authentication:
          uaa:
            client_id: ((bosh.authentication.username))
            client_secret: ((bosh.authentication.password))
        root_ca_cert: ((bosh.root_ca_cert))
      cf:
        root_ca_cert: ((cf.root_ca_cert))
        url: ((cf.api_url))
        authentication:
          url: ((cf.uaa.url))
          user_credentials:
            username: admin
            password: ((cf.user_credentials.password))
      service_deployment:
        releases:
        - name: service-metrics
          version: ((service-metrics-release-version))
          jobs: [service-metrics]
        - name: loggregator-agent
          version: "1.0"
          jobs: [loggregator_agent]
        - name: bpm
          jobs: [bpm]
          version: 1.0.4
        stemcell:
          os: ubuntu-xenial
          version: "170.12"
      service_catalog:
        id: ((service_catalog_id))
        service_name: ((service_catalog_service_name))
        service_description: Sample ODB service with service metrics
        bindable: true
        plan_updatable: true
        metadata:
          display_name: Sample ODB
        tags:
        - sample
        global_properties:
          persistence: true
        plans:
        - name: sample
          plan_id: 020ba7a0-17d1-41a6-b93e-8c648130e8fd
          description: "Sample on demand service with service metrics"
          instance_groups:
          - name: service-metrics
            vm_type: default
            instances: 1
            networks: [default]
            azs: [z1]
          properties:
            service_metrics_ca: ((service_metrics.ca))
            service_metrics_cert: ((service_metrics.certificate))
            service_metrics_key: ((service_metrics.private_key))
            loggregator_agent_ca: ((loggregator_agent.ca))
            loggregator_agent_cert: ((loggregator_agent.certificate))
            loggregator_agent_key: ((loggregator_agent.private_key))
  - name: route_registrar
    release: routing
    consumes:
      nats:
        from: nats
        deployment: cf
    properties:
      route_registrar:
        routes:
        - name: ((broker_route_name))
          registration_interval: 20s
          port: *broker_port
          uris: [((broker_uri))]

update:
  canaries: 1
  canary_watch_time: 3000-180000
  update_watch_time: 3000-180000
  max_in_flight: 4

variables:
- name: loggregator_ca
  type: certificate
  options:
    common_name: loggregatorCA
    is_ca: true
- name: loggregator_agent
  type: certificate
  options:
    ca: loggregator_ca
    common_name: agent
    alternative_names:
    - metron
    - agent
    - localhost
    - 127.0.0.1
    - ip6-localhost
    - ::1
    extended_key_usage:
    - client_auth
    - server_auth
- name: service_metrics
  type: certificate
  options:
    ca: loggregator_ca
    common_name: service_metrics
    extended_key_usage:
    - client_auth
- name: broker_password
  type: password
