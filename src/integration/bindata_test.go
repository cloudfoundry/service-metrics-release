// Code generated by go-bindata.
// sources:
// certs/loggregator-ca.crl
// certs/loggregator-ca.crt
// certs/loggregator-ca.key
// certs/metron.crt
// certs/metron.csr
// certs/metron.key
// certs/service-metrics.crt
// certs/service-metrics.csr
// certs/service-metrics.key
// DO NOT EDIT!

package integration_test

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)
type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIICiDByAgEBMA0GCSqGSIb3DQEBCwUAMBkxFzAVBgNVBAMTDmxvZ2dyZWdhdG9y
LWNhFw0xODAzMDYxNzU1MTNaFw0xOTA5MDYxNzU1MTJaMACgIzAhMB8GA1UdIwQY
MBaAFI1MJ+tSe1KByJDuhJjK25TIIBukMA0GCSqGSIb3DQEBCwUAA4ICAQBnEnOv
iIwd+UCmDO7Hg2LgYgXTGM6Hm3lvf/j58YkYhbTdoQw3//Lgao60QxnUMELF97qu
LLCLq3i3vdPA0dw/syIlUetPadisEC+ZYyoNgos+C1we/+RVl0UEZX9o1sIDdH0e
26M4p3/L5pfApuIbBfgxBXnqhJk1CbVhSNqBzuGBiyIIStb0IHooKG+c4qWMmB7L
sA+sR6pReTDsA7CTx7QcXbDECX1Ni4zE570bHOsrH0H5G8ejGVcGIDBi7jUD5Lgh
3Wf309bpnD4ye2lHChjuu3Qs9L1nFC0hwmmnrKew3mh1LoaDhwqgxKg4tb9ounlT
bsUPpxNx1u2O7u1aAkLVPqrDv2ArTHp8qsS4NRHhdPhtGKzrjGXCY0+CKzk35OF5
J/430jUitmuCmMLDKasRboB/7GsK7bDrU7mxvfax/nNzeenY6l6vY7n4hXAA0rnC
FVA0mmgyAEVgDb/ao8l9G6eOOQTW5kyewUrtt2tTWfkccUuS+lfkiCu+VbwdK0NA
xRqbTw+jfifb5PHpi94VT5Vav96TWCJHCuBDWAeDLf0zDJzr7moxWr1fvrIO09zv
WCLC0SA9u3k3CYV20XxsUHGJy7Y0ol0+u0A8ztp7ts877dFJLpdaynpJUcnJ4b3f
xjZ6+K1Vu/mj9vwBKcZFo0YECjbDWxB67N6SxA==
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 934, mode: os.FileMode(292), modTime: time.Unix(1520358913, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8jCCAtqgAwIBAgIBATANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDEw5sb2dn
cmVnYXRvci1jYTAeFw0xODAzMDYxNzU1MTJaFw0xOTA5MDYxNzU1MTJaMBkxFzAV
BgNVBAMTDmxvZ2dyZWdhdG9yLWNhMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC
CgKCAgEAlr5EgcjGzLAZ4YS1ksVYy3CXdVDBn6ISSC5HPZpuScksOID3+odk6iaA
I6abU04oGfVy91QLjJ5NP1qIJBde2EoEXy4L623EyYVV7tg6dVQ8KKQdB9xDv9LD
VuwNv+/aKthszDnhvPcek1+7XhRYm83IqrL1Tc5wBv6KQl95LG0pUnQ1OfiIE/pw
dv/EGajfDOJ5rh6Rc1sF8AP8OU8dE6zEZ+2gluC4xvckdruTwhAEBQaTxdqTGNn3
KVXmRgnoVYiXZzK5+v/9CBGnDCAAM7SE7UqOM8Gryinz/8Hdm++4DKnSzPPIq9eY
jyvUMazE9QTvayM4QCAG75G5sI9u78zq2lKaGSlhMSRodACzQZp9kz04BPzNYQ1A
ZvmgoGgGoTG1cSFgkYIAbhPlggfqXRpK7FYJJU3rdQ6jiUgBVuicxkKsyVSB+Ke6
h1QGi7ePfIgAzixv1QJojMCyjAlluj9zTKbfwUZvvy3jkIc/d1e4oO97Li6rkWkk
HkJ7A81V7kE95RL68KAi1vTI85LDzDfQgMbgM4TIXu/uq/T5IIaT/L7EMjZ0Emwt
lwRgz36TfPPrpHuHHf0jJMU7J0WAfy3W3AOIHnGtNiaOAKhcJ8sYzNwj8olQJ1rb
vgxTJIvVToRiWZPXq9kGi7ceBUpV/l9xgeNmWE1SME3DrqxbpvsCAwEAAaNFMEMw
DgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFI1M
J+tSe1KByJDuhJjK25TIIBukMA0GCSqGSIb3DQEBCwUAA4ICAQCCm4/SY3ojL5vp
zQOuJOmCNqsBEfz3cVZsE4DTrMpPV12Z95RhWv9jBH6amaakZDx/SB4RNF3lzeol
wcDsamQrY0EJvMfHz/IHVzFgZC1nVrsHhwZ+79JvhdZlHqC4OS1w226nOwSaPBU0
IXAe7vvgekgPe7GQvhvK67h1hZ5Z7RUCjVg3fIZCbhdArohS4S4A6u+5aWqAgdwp
gBE2Ex8nmydsDGM/v2YGqRMWzVZxnNZs5Y80KQoCXIvSPwRdqM6ytj6g9Nmp19Xf
AMlp/X9GouPv7KKZ3yZZoY84dyF6SInbPVbBQ9R3st1SSCzJ6yUcw9kbJwS9qzsh
iueXyOdakSyppZxC6QLGagmeoLr7z+BbCZeYzYZVJBysJx3EpYr3uZ/pSLnekrGf
esyef9Kpsybc/axnHawI+Q/GNXkSgrpEHgyxQAXG9FRa15V1l3RaKG+Bsu0QdUCt
UmvktTSdsgZEI+bpoYI0G1VKtwOkXoD2bISSay4z0avYg5OS1iBqTm4Wco2osLAM
uOoQGlu/dEc1NIfYrw+BoNY4GfSSbVy0RcT1GF11pNJNv41qBEbjRoV/PfYMqQf5
4/aSPp1hlubr52yvyAIKfmVV9t/3OvOs9VWPSWsFiG3j0UCxrRruP/jbpE6DiQTT
/JQguSpoqm/SQcgKGWO2jVwFu6oaMA==
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1777, mode: os.FileMode(292), modTime: time.Unix(1520358913, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1520358913, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIQDu4mQiyGYrXq1jOZLdLv+TANBgkqhkiG9w0BAQsFADAZ
MRcwFQYDVQQDEw5sb2dncmVnYXRvci1jYTAeFw0xODAzMDYxNzU1MTNaFw0xOTA5
MDYxNzU1MTFaMBExDzANBgNVBAMTBm1ldHJvbjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAMOOH64c8h955DzEF4//bFD3L0ozXLziXdaswQVMaDGo9ucA
NHoJvuFf9TGf9uQ5Jcqt/PAsdBr6o8NUyDdLxU2LI5l6gRKc9I7DvbaktY1GWiRy
eS8Zuygj/lYnE/042klkxETMYHKdlfkZVixwLt+5zDXJPg/RprdgPJnEnl1uUnpY
kziUI2mA1B7WDZzsubR/mDSGPzKGyXyV+/bEk7wPRx//T7XyhA7agbYIpL/FCHUt
5VCdUwhEBbY7PYYfKBk7YSFipkD/pj3y/K8J+hKOwUKBV/NtxVv9T6gvTIWI28pZ
blUl+wlZHgQOcYGuiZB/0OD13to3UYMJBtGHqcECAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
U/ctLu1awyDcbUULzhcwSpOKtqwwHwYDVR0jBBgwFoAUjUwn61J7UoHIkO6EmMrb
lMggG6QwDQYJKoZIhvcNAQELBQADggIBAEkWaGk9oGSjX2GNccZ70RDTg0OOz1AP
UlgDXo2bwVxiaQlbXD7mzYHm9PdrP4M91wbIc9GKAmyRkhuKqSIsVqPqwzHJSpVj
cMHMSnSXuq5ts+N2PLryffH+KCPlMS1RyTpX0HJmmZVo7P91nM9UtuQWwG4URNC9
tufL85wqdjEJpgzqECEqSNVOVNZ5FdHIm5wv4xOK111sC1ZFHpLrFCBq1hTpKhQg
kwwyD12oZcGkPqhnVOXCcvtJ+t2iaIg67Ixahvrx96YcuccLYi9phaVbDetnz71h
Ifo0GOqioWtYoRY1aP1SuZPntQgU7pk3KUQaeTkk6aL8dIpx0Ycn19QfugtnVo70
9FvRgmXao9ESb0ux+HqckIu4dBIFqS0gt8dzZV58in0Z4z8wiZUN1vFcIzire666
5ZMWyt1vPz/HfOVrODxrlUyslUqkIeQMnyfBc5aapyPCpCVUX9LMETeNRVHdoUoN
rtW1CwMySU9yhlhmxAlKfPSB8/a2xBOA0++qSfxBkRSBhCbdbfjCHlRNsASIDWc/
6uFeW3fR6DCnhzLUAKPDA3p2RV0Wgfoa0YsT/mF4JqEk2RVWOdIX0EtK3lXLye/R
0Y6FFYXzQ1UZ3jdgVMmTrCIQCtYABkEae1PjoQxuZeaS4uCLPdb1NKYRUdzqwbTf
EWghWompmMcI
-----END CERTIFICATE-----
`)

func metronCrtBytes() ([]byte, error) {
	return _metronCrt, nil
}

func metronCrt() (*asset, error) {
	bytes, err := metronCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1520358913, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAw44frhzyH3nkPMQXj/9sUPcvSjNcvOJd1qzBBUxoMaj2
5wA0egm+4V/1MZ/25Dklyq388Cx0Gvqjw1TIN0vFTYsjmXqBEpz0jsO9tqS1jUZa
JHJ5Lxm7KCP+VicT/TjaSWTERMxgcp2V+RlWLHAu37nMNck+D9Gmt2A8mcSeXW5S
eliTOJQjaYDUHtYNnOy5tH+YNIY/MobJfJX79sSTvA9HH/9PtfKEDtqBtgikv8UI
dS3lUJ1TCEQFtjs9hh8oGTthIWKmQP+mPfL8rwn6Eo7BQoFX823FW/1PqC9MhYjb
ylluVSX7CVkeBA5xga6JkH/Q4PXe2jdRgwkG0YepwQIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBAAHRb046eWGxt3oTyt15b8ASJ0I/6HKyVX722g5QWqVPUw4rKHts
sVa6Pv6OKTUzpNTLN9YwMtr1wG4ma50EQ9mJOBNAKVVzk+nKY0uBCqdHNkt0/YHO
2AmSl5Ar3mh0GJBCgVo52j1tHrUcNG1F5TU98xFbxrd9oWIwY/iUIhdXk/pSkdgS
ymGyJeGgVB3Os1ING4GlAODMrJAOz9tMFTydqbavJT90Kdepp7vNequ5fgH3vMFw
iLi5uL1Ok8e8XMNFDdz3i2lE3Ew46ngM8zPoyO6zo/jMCUovg+/Mdj11C/sHwz8W
HSIBBnfAsAYXVArVmsplKhjMQDJouj3d4ho=
-----END CERTIFICATE REQUEST-----
`)

func metronCsrBytes() ([]byte, error) {
	return _metronCsr, nil
}

func metronCsr() (*asset, error) {
	bytes, err := metronCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1520358913, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpgIBAAKCAQEAw44frhzyH3nkPMQXj/9sUPcvSjNcvOJd1qzBBUxoMaj25wA0
egm+4V/1MZ/25Dklyq388Cx0Gvqjw1TIN0vFTYsjmXqBEpz0jsO9tqS1jUZaJHJ5
Lxm7KCP+VicT/TjaSWTERMxgcp2V+RlWLHAu37nMNck+D9Gmt2A8mcSeXW5SeliT
OJQjaYDUHtYNnOy5tH+YNIY/MobJfJX79sSTvA9HH/9PtfKEDtqBtgikv8UIdS3l
UJ1TCEQFtjs9hh8oGTthIWKmQP+mPfL8rwn6Eo7BQoFX823FW/1PqC9MhYjbyllu
VSX7CVkeBA5xga6JkH/Q4PXe2jdRgwkG0YepwQIDAQABAoIBAQCPmMFynRa+Pkd2
x5d1yd3D5n73QZgLqz208c4bEexA6w3CusfOBXIBFPF7qzckh0JU/kYKJtprJTkz
qgILeLw9ILrXbLly7YY3f0zD3VbjkpGGyfhqub5Qz31nzfJDs4e29SOaUWlRQJ5r
+Erq/sWsy0ZFCK1l+FEvvp9BWrvfZmSyKN8wZhem9xeytc/UJoRlejBPH72CbJUf
4mGeoCtVY5PBAXWVb2mVicwOsHF2n1fnA2MJa5eLj11OsAkuGDwljRgeDEQeVbzS
Pn95s3ajDvYrqik/VHqcsVUCSWE8+0MeqrlCMw+A5MvhHLkuwu69V2gIx79A44mS
fYLp5vABAoGBAMeRa+epCXrsyAWdhtK4cvZ/X8FoN7jOydHyp0/7P0UtEE0n/yOR
r1KT9s4JGpOU+hHXKXJn4zrLOmlDUbZJ+kckTl+WQbxtYz6NSAOyF4shiMks8mWk
QILhCWZvpsXEaRN/cKVBNJn+h1p17+dQmYW6V86AZ6TNVEwm2TnZvYFhAoGBAPra
NnpF9EifXqhHksEKyRXaS2hbO7Yl5GB7MGSGPwOWLC/XrCFhdCj2sLXdVeeYHeSa
bNRhiBBpmak56+70pCdr0pyq1M94XAVtPYdhv44UYSPsyYrTHWAtu+BDwW1gxebs
VqVjoPATXyeNpeEYZgj2kraE0Khan4NLw8NPiCRhAoGBAIXDVBcPdvo8sQkKf+7H
kM7lqzIAf7DQcffV9A0o80yTmuSMVXfq0x+/a2LIOVcIOOEyXWaAeY7T3w/k/mT3
itiaXim1ldQNYcLwgX9wpFUuIfftt38nK9JNsbZGSfsu3dsixUcOwIojT2fzutxJ
as12jBoueMm+kq0EMP+UkW+hAoGBANH6GqPbLpIjpQ5javpf1taN9ZUS2TatHS+N
roJWxSRxbedWNuVyN9OaO2zgKupDMLKMeRCF22kxm8hFjbJl4YqF/LPbY2uPKif4
uwo5zihV8sIpkMK92NcLMTqWPLEb0kxsBFNIxAxxirMHJJT44WAbVc+l+SsTQHac
0u8IAcPBAoGBAIJdby9MK469+TB/UZoF4m6JwNsZ//51NyfYzzp+h+G8c9HhaFIC
Rn/ERVY/JSJxNlZl8SZMgnfDs24BrDRSa4JPoGlm61VYqvd9M5urCpcaBVXhoa3n
7VqQQ13WaMxqqEc/3L/U9NFzIWy0ORXkLIeALEJqe/FN9zARUNe06ae+
-----END RSA PRIVATE KEY-----
`)

func metronKeyBytes() ([]byte, error) {
	return _metronKey, nil
}

func metronKey() (*asset, error) {
	bytes, err := metronKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1520358913, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceMetricsCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELjCCAhagAwIBAgIQE5WiEwQtbeaMYUDp7NjDPTANBgkqhkiG9w0BAQsFADAZ
MRcwFQYDVQQDEw5sb2dncmVnYXRvci1jYTAeFw0xODAzMDYxNzU1MTNaFw0xOTA5
MDYxNzU1MTFaMBoxGDAWBgNVBAMTD3NlcnZpY2UtbWV0cmljczCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBAM2ECNh51jMjpjNFJfc1TmPpDyrO/oPH3vd9
/igS2TTIcmyGE3i/1qs1MGUipZh4dv85xOGp5tto5peOtUMOU0pkGYYR+yHZjw0x
rkHhU9IBaVYIuQGWQ51Wdt1Al811ofFcJnzmdRRsiirfjSB0CA7zl/HQ6N6J6NKw
h6XqES0A2thiouZUMu4fumHRj+40UNhQgbKYccTgtKj3NG2u865GI3s+S6ZT7KkA
fAlEFAg+nN1NrG+YUizr7GQUvKt2t0XDXaI34X/JCb4/4so3jxlZx9nQjN2kMsG1
o2jLLMj2vwXQ77ljmdHY0V129JsrVX9VtwgZ0bBUgwT+QJ9eAx0CAwEAAaNxMG8w
DgYDVR0PAQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAd
BgNVHQ4EFgQUDM7sW9N5R661bkxDFm3nGwPvPcAwHwYDVR0jBBgwFoAUjUwn61J7
UoHIkO6EmMrblMggG6QwDQYJKoZIhvcNAQELBQADggIBAIHYVRgCZRYlmWIbylFe
4DVAhnPynHPzRyLcrfaBmYZDdNx2US7fvs7tLgapWC8UMqwWymu6qT47HzOIl7S0
iFcRB+g+SgTMO9t/dE858Gf01F1pA6wB4AeLTPuQpoSc6BeGmiWFYyDRv3a/+ZS+
UyXlf3xjJT6Rsmy1jFzbpFLExpbA523Ql1Z31f8bN37+r0HyH4M6Xk9OKilcBYHl
kybpNzQazL2b0mFQIDktcEObQ+DWbn8Vmt2RGuoOuKKtnD8KuPErX5n3ymLzJyTk
BvQZrKYoC4O0gnma/p5uCHdK6UtviH4H+yFkm6qJU+YjUu8Q96Yr98H/9DjWi9+G
TAZhTRK2QOOaM3WDfXo1k5mq8BNloyrCs7GT3Pw3E8u49rHFM1phrkCJFoZdFLYx
KhrSkMHIkMvTsaB6HsO5+E0pMtxXZ3xqUWbFf0Rn0Ribp1Ob4hRgl9UDsERq087K
Cm3fwJpO6Jhp3oIkyBQQWEhVOyhmgG6vBjCvr5qtBm54jJTE64YGYIGWZBLZBy2H
tGx7RwmTwjsfe83r/Qjb0eGkltxb6BHt3xFJXhaRs6x+8z4FX4uS78JoC97DYUdz
zkuMpbJZj/md9Hia+SkXUXovXHaOfTWFFQLTi4nObXTr9pviY1iwgGJko1Dza9nX
E5nwlK2JQp6cqvU+AoXxzvNT
-----END CERTIFICATE-----
`)

func serviceMetricsCrtBytes() ([]byte, error) {
	return _serviceMetricsCrt, nil
}

func serviceMetricsCrt() (*asset, error) {
	bytes, err := serviceMetricsCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service-metrics.crt", size: 1509, mode: os.FileMode(292), modTime: time.Unix(1520358913, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceMetricsCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICXzCCAUcCAQAwGjEYMBYGA1UEAxMPc2VydmljZS1tZXRyaWNzMIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzYQI2HnWMyOmM0Ul9zVOY+kPKs7+g8fe
933+KBLZNMhybIYTeL/WqzUwZSKlmHh2/znE4anm22jml461Qw5TSmQZhhH7IdmP
DTGuQeFT0gFpVgi5AZZDnVZ23UCXzXWh8VwmfOZ1FGyKKt+NIHQIDvOX8dDo3ono
0rCHpeoRLQDa2GKi5lQy7h+6YdGP7jRQ2FCBsphxxOC0qPc0ba7zrkYjez5LplPs
qQB8CUQUCD6c3U2sb5hSLOvsZBS8q3a3RcNdojfhf8kJvj/iyjePGVnH2dCM3aQy
wbWjaMssyPa/BdDvuWOZ0djRXXb0mytVf1W3CBnRsFSDBP5An14DHQIDAQABoAAw
DQYJKoZIhvcNAQELBQADggEBACzmwW34y2od87j6nFUjbpYzL6C3wFh9DPyVXTpy
vmWZdBc8HB2qfKU9iwmB0ukKQYbQv2UOmDnK2p3IxNJP9NcJ8LEaD7EI5Fgp3TiP
mHvqDvewgLvO9Upb+ovAiRtpQOkQRlhY9Q7jUvIleGQgeiy8PodjcWf/MP3mhdPY
M8cvdW6oL6gLkFT7JJ46EvYziHD0cYJMi0768Fk7zUB90wzY62lPJyFor7U1/Q8m
IXY+Ff+UrahbJSSNxuQmBW59VEu1SfphimErLFC53R02fFTPaYtmAyZxtuG9bsCu
je8X/KrkgVWvsD++fvUH9nDvZNMvd9RL3VolZTo/pwFyX44=
-----END CERTIFICATE REQUEST-----
`)

func serviceMetricsCsrBytes() ([]byte, error) {
	return _serviceMetricsCsr, nil
}

func serviceMetricsCsr() (*asset, error) {
	bytes, err := serviceMetricsCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service-metrics.csr", size: 899, mode: os.FileMode(292), modTime: time.Unix(1520358913, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceMetricsKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAzYQI2HnWMyOmM0Ul9zVOY+kPKs7+g8fe933+KBLZNMhybIYT
eL/WqzUwZSKlmHh2/znE4anm22jml461Qw5TSmQZhhH7IdmPDTGuQeFT0gFpVgi5
AZZDnVZ23UCXzXWh8VwmfOZ1FGyKKt+NIHQIDvOX8dDo3ono0rCHpeoRLQDa2GKi
5lQy7h+6YdGP7jRQ2FCBsphxxOC0qPc0ba7zrkYjez5LplPsqQB8CUQUCD6c3U2s
b5hSLOvsZBS8q3a3RcNdojfhf8kJvj/iyjePGVnH2dCM3aQywbWjaMssyPa/BdDv
uWOZ0djRXXb0mytVf1W3CBnRsFSDBP5An14DHQIDAQABAoIBAC7Et0acI1Sr7iyI
teUV6mruJJd3V5AhsenccDQqZeePHgr4UAIQlgeMKSE6yzhxYZMfUGCSS4juzFr9
DN7fqbCqKuzJtr6zRcyY27D+WBbYX2JGxeNIkMaDYLVk96a3+Ex2zgNqZoZpVOAA
05rpDNRqNs++3N+XvrYDmjr1k0cMG9tENYRxSZaBiFIJ4ijJVnFhjNMY3sOb8gw/
RyzH1p8+Ti/s2siuH+pfjf6PU+5h+3ntwL23dtsXzmNA4dNyVM8kGSbK3pglK09V
8QL/meMuhvd3pS4aMAMx61I4/LY9clsLaIHqlxeGVTFJ1ntszj4fiL0ab+humo/o
gCNg0rkCgYEA/P9devD+of5fOLuq7kfwvlrDR7//nPAlrMwiOxvPawyIG2fLXn+z
9YJG5qWKyPLv6oCs2WIRWDtcqmLWflMYXiUe/4x2WO9B0JDhVYTQu+EmiaRvjrPM
2BB+tk/XozI3t7DByOc6D6OBbABW+xBwIqhkG02bx0uHKeLr8KqyAxsCgYEAz/Rq
G43Qo6ZnTXCyAiykDZ7RVXglhMyVCHotui+Gj2kdr2WvpO2fBz5aaf6Htk0hNjDw
bLB9LrMRPaBx0r+zGtyViCiRjOg2JRXdtGz5S/H85VPsFmeleHeTTL0lrYLvWvO8
u40Aop9DXoEV0SXhp3F3uLEz+RxbUhYs0H1tPicCgYEA68q0vRhOuXvyE1YVAO9b
mI3O4tg2y3WmJ145qQ1KS2Lql2AtUm2Cs5Yvrlcq+g4xPEWg0xlrQOhSfRqQ/jtD
wrqmIVYwFsMme9QLr0CRqgk1eaMftcgtalI1RoUzXI45D6JVeYDHxDuHK7lFV8kC
OcrnQesa/KuP1aIAc9UjA3ECgYBGRw9k6HROGfpnTWKbIYL/p2CPRd9IFet3xfKW
LWGILbn+gJrvXe6UgBoGICK1FTPYIInf8XUcxx9YeFR/KJHazhkqvqsRt5g0yEL4
qqtFYy5YQhhTKgvdvmtlT7bgAJPrZNuvdmN0keYulelNmUO9VrdjD1/FHDQwdZYH
j5vPmQKBgGJUdDy0tXCKiLbQ2kt01qMgeYZxHCJKbu/bl3OpvfDwtJVb4ZCbTysr
dZYdgAjLAfvOACjOFPtCBvDMqCgwV9SOCVGEbSiAVViISnkQ3y76h5YkXZxAvznv
0ZAkqk6VLGbCKDoPcrCaswrGP20IktW1jvZeyw6fci/kLdR59RsP
-----END RSA PRIVATE KEY-----
`)

func serviceMetricsKeyBytes() ([]byte, error) {
	return _serviceMetricsKey, nil
}

func serviceMetricsKey() (*asset, error) {
	bytes, err := serviceMetricsKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service-metrics.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1520358913, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"loggregator-ca.crl": loggregatorCaCrl,
	"loggregator-ca.crt": loggregatorCaCrt,
	"loggregator-ca.key": loggregatorCaKey,
	"metron.crt": metronCrt,
	"metron.csr": metronCsr,
	"metron.key": metronKey,
	"service-metrics.crt": serviceMetricsCrt,
	"service-metrics.csr": serviceMetricsCsr,
	"service-metrics.key": serviceMetricsKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"loggregator-ca.crl": &bintree{loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt": &bintree{loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key": &bintree{loggregatorCaKey, map[string]*bintree{}},
	"metron.crt": &bintree{metronCrt, map[string]*bintree{}},
	"metron.csr": &bintree{metronCsr, map[string]*bintree{}},
	"metron.key": &bintree{metronKey, map[string]*bintree{}},
	"service-metrics.crt": &bintree{serviceMetricsCrt, map[string]*bintree{}},
	"service-metrics.csr": &bintree{serviceMetricsCsr, map[string]*bintree{}},
	"service-metrics.key": &bintree{serviceMetricsKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

